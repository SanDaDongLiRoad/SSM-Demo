<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xulizhi.demo.mapper.UserMapper" >
    <resultMap id="BaseResultMap" type="com.xulizhi.demo.domain.User" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="deleted" property="deleted" jdbcType="BIT" />
        <result column="create_id" property="createId" jdbcType="VARCHAR" />
        <result column="create_name" property="createName" jdbcType="VARCHAR" />
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
        <result column="modify_id" property="modifyId" jdbcType="VARCHAR" />
        <result column="modify_name" property="modifyName" jdbcType="VARCHAR" />
        <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, name, password, deleted, create_id, create_name, create_date, modify_id, modify_name,
        modify_date
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xulizhi.demo.domain.UserExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from user
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from user
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.xulizhi.demo.domain.UserExample" >
        delete from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.xulizhi.demo.domain.User" >
        insert into user (id, name, password,
        deleted, create_id, create_name,
        create_date, modify_id, modify_name,
        modify_date)
        values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{deleted,jdbcType=BIT}, #{createId,jdbcType=VARCHAR}, #{createName,jdbcType=VARCHAR},
        #{createDate,jdbcType=TIMESTAMP}, #{modifyId,jdbcType=VARCHAR}, #{modifyName,jdbcType=VARCHAR},
        #{modifyDate,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.xulizhi.demo.domain.User" >
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="deleted != null" >
                deleted,
            </if>
            <if test="createId != null" >
                create_id,
            </if>
            <if test="createName != null" >
                create_name,
            </if>
            <if test="createDate != null" >
                create_date,
            </if>
            <if test="modifyId != null" >
                modify_id,
            </if>
            <if test="modifyName != null" >
                modify_name,
            </if>
            <if test="modifyDate != null" >
                modify_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null" >
                #{deleted,jdbcType=BIT},
            </if>
            <if test="createId != null" >
                #{createId,jdbcType=VARCHAR},
            </if>
            <if test="createName != null" >
                #{createName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null" >
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyId != null" >
                #{modifyId,jdbcType=VARCHAR},
            </if>
            <if test="modifyName != null" >
                #{modifyName,jdbcType=VARCHAR},
            </if>
            <if test="modifyDate != null" >
                #{modifyDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.xulizhi.demo.domain.UserExample" resultType="java.lang.Integer" >
        select count(*) from user
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update user
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null" >
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.deleted != null" >
                deleted = #{record.deleted,jdbcType=BIT},
            </if>
            <if test="record.createId != null" >
                create_id = #{record.createId,jdbcType=VARCHAR},
            </if>
            <if test="record.createName != null" >
                create_name = #{record.createName,jdbcType=VARCHAR},
            </if>
            <if test="record.createDate != null" >
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.modifyId != null" >
                modify_id = #{record.modifyId,jdbcType=VARCHAR},
            </if>
            <if test="record.modifyName != null" >
                modify_name = #{record.modifyName,jdbcType=VARCHAR},
            </if>
            <if test="record.modifyDate != null" >
                modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update user
        set id = #{record.id,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        deleted = #{record.deleted,jdbcType=BIT},
        create_id = #{record.createId,jdbcType=VARCHAR},
        create_name = #{record.createName,jdbcType=VARCHAR},
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
        modify_id = #{record.modifyId,jdbcType=VARCHAR},
        modify_name = #{record.modifyName,jdbcType=VARCHAR},
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.xulizhi.demo.domain.User" >
        update user
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="deleted != null" >
                deleted = #{deleted,jdbcType=BIT},
            </if>
            <if test="createId != null" >
                create_id = #{createId,jdbcType=VARCHAR},
            </if>
            <if test="createName != null" >
                create_name = #{createName,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null" >
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyId != null" >
                modify_id = #{modifyId,jdbcType=VARCHAR},
            </if>
            <if test="modifyName != null" >
                modify_name = #{modifyName,jdbcType=VARCHAR},
            </if>
            <if test="modifyDate != null" >
                modify_date = #{modifyDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xulizhi.demo.domain.User" >
        update user
        set name = #{name,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        deleted = #{deleted,jdbcType=BIT},
        create_id = #{createId,jdbcType=VARCHAR},
        create_name = #{createName,jdbcType=VARCHAR},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        modify_id = #{modifyId,jdbcType=VARCHAR},
        modify_name = #{modifyName,jdbcType=VARCHAR},
        modify_date = #{modifyDate,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>